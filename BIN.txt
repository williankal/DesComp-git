tmp(0) := JSR & '0' & x"0E";	-- JSR @14		#Deve desviar para a posição 14
tmp(1) := JMP & '0' & x"05";	-- JMP @5		#Deve desviar para a posição 5
tmp(2) := JEQ & '0' & x"09";	-- JEQ @9		#Deve desviar para a posição 9
tmp(3) := NOP & '0' & x"00";	-- NOP
tmp(4) := NOP & '0' & x"00";	-- NOP
tmp(5) := LDI & '0' & x"05";	-- LDI $5		#Carrega acumulador com valor 5
tmp(6) := STA & '0' & x"00";	-- STA $0		#Armazena 5 na posição 0 da memória
tmp(7) := CEQ & '0' & x"00";	-- CEQ @0		#A Comparação deve fazer o flagIgual ser 1
tmp(8) := JMP & '0' & x"02";	-- JMP @2		#Vai testar o flagIgual depois do jump
tmp(9) := NOP & '0' & x"00";	-- NOP
tmp(10) := LDI & '0' & x"04";	-- LDI $4		#Carrega acumulador com valor 4
tmp(11) := CEQ & '0' & x"00";	-- CEQ @0		#Compara com valor 5, deve fazer o flagIgual ser 0
tmp(12) := JEQ & '0' & x"03";	-- JEQ @3		#Não deve ocorrer o desvio
tmp(13) := JMP & '0' & x"0D";	-- JMP @13		#Fim. Deve ficar neste laço
tmp(14) := NOP & '0' & x"00";	-- NOP
tmp(15) := RET & '0' & x"00";	-- RET			#Retorna para a posição 1
tmp(16) := JMP & '1' & x"2C";	-- JMP @ 300
